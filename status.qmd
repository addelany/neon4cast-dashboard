---
title: "Status"
editor: visual
---

```{r setup, echo = FALSE, message=FALSE, warning=FALSE}
# These may need to change later 
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)
library(vis4cast)
library(glue)
library(reactable)
library(httr)
score4cast::ignore_sigpipe()

## source function script 
source("R/status_functions.R")

```

## Data Status

```{r}
## table that covers general forecasting challenge diagnostics

# themes_list <- c('aquatics','beetles,'phenology','terrestrial_30min','terrestrial_daily,'ticks',) 
# 
# theme_stats <- theme_statistics(themes_list)
# 
# reactable(theme_stats,
#           columns = list(theme = colDef(name='Theme'),
#                          n_teams = colDef(name='Number of Teams'),
#                          n_submissions = colDef(name='Forecasts')),
#           highlight = TRUE)

# ADD ROW THAT SUMS OF ALL COLUMNS (TOTAL TEAMS, TOTAL FORECASTS, ETC.)
```


::: panel-tabset

## Met Data
This shows the date of the most recent NOAA forecast run for each site
```{r}
print('met data')

# NOAA DATA TEST 
#df_noaa <- neon4cast::noaa_stage2()

#df_noaa2 <- df_noaa %>% 
#  group_by(site_id) %>% 
#  summarize(max = max(lubridate::as_date(start_date))) %>% 
#  collect()

#reactable(df_noaa2)


```

## Phenology Data

```{r}
## Create forecast submission stats 
pheno_forecasts_week <- forecast_time_summary(cutoff_week,'phenology')
pheno_forecasts_month <- forecast_time_summary(cutoff_month,'phenology')
pheno_forecasts_year <- forecast_time_summary(cutoff_year,'phenology')
```

- Forecasts submitted over the last week: `r pheno_forecasts_week`
- Forecasts submitted over the last month: `r pheno_forecasts_month`
- Forecasts submitted over the last year: `r pheno_forecasts_year`

## Aquatics Data

```{r}
## Create forecast submission stats 
aquatic_forecasts_week <- forecast_time_summary(cutoff_week,'aquatics')
aquatic_forecasts_month <- forecast_time_summary(cutoff_month,'aquatics')
aquatic_forecasts_year <- forecast_time_summary(cutoff_year,'aquatics')
```

- Forecasts submitted over the last week: `r aquatic_forecasts_week`
- Forecasts submitted over the last month: `r aquatic_forecasts_month`
- Forecasts submitted over the last year: `r aquatic_forecasts_year`

```{r}
## Create Targets Table 
df_aquatics <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/aquatics/aquatics-targets.csv.gz")
theme_targets_table(df_aquatics)
```


```{r}
## Create Forecast Table 
theme_forecast_table('aquatics')
```

## Terrestrial Data

```{r}
## Post forecast submission stats --check back on this about daily or 30 min 
terr_30_forecasts_week <- forecast_time_summary(cutoff_week,'Terrestrial_30min')
terr_30_forecasts_month <- forecast_time_summary(cutoff_month,'Terrestrial_30min')
terr_30_forecasts_year <- forecast_time_summary(cutoff_year,'Terrestrial_30min')

terr_daily_forecasts_week <- forecast_time_summary(cutoff_week,'Terrestrial_daily')
terr_daily_forecasts_month <- forecast_time_summary(cutoff_month,'Terrestrial_daily')
terr_daily_forecasts_year <- forecast_time_summary(cutoff_year,'Terrestrial_daily')

```

- Forecasts submitted over the last week: `r terr_30_forecasts_week`
- Forecasts submitted over the last month: `r terr_30_forecasts_month`
- Forecasts submitted over the last year: `r terr_30_forecasts_year`

- Forecasts submitted over the last week: `r terr_daily_forecasts_week`
- Forecasts submitted over the last month: `r terr_daily_forecasts_month`
- Forecasts submitted over the last year: `r terr_daily_forecasts_year`

## Ticks Data

```{r}
## Post forecast submission stats 

ticks_forecasts_week <- forecast_time_summary(cutoff_week,'ticks')
ticks_forecasts_month <- forecast_time_summary(cutoff_month,'ticks')
ticks_forecasts_year <- forecast_time_summary(cutoff_year,'ticks')
```

- Forecasts submitted over the last week: `r ticks_forecasts_week`
- Forecasts submitted over the last month: `r ticks_forecasts_month`
- Forecasts submitted over the last year: `r ticks_forecasts_year`

## Beetles Data

```{r}
## Post forecast submission stats 

beetles_forecasts_week <- forecast_time_summary(cutoff_week,'beetles')
beetles_forecasts_month <- forecast_time_summary(cutoff_month,'beetles')
beetles_forecasts_year <- forecast_time_summary(cutoff_year,'beetles')
```

- Forecasts submitted over the last week: `r beetles_forecasts_week`
- Forecasts submitted over the last month: `r beetles_forecasts_month`
- Forecasts submitted over the last year: `r beetles_forecasts_year`

## Automated Jobs

```{r}
health_check <- GET(
  "https://healthchecks.io/api/v1/checks/",
  accept_json(),
  add_headers('X-Api-Key' = 'YKpvNOQWGtcGtyKu4rgC0Z7_0AQFo4kj')
)

check_parsed <- content(health_check,as='parsed')$checks

hc_names <- c()
hc_status <- c()

for (i in seq.int(1,length(check_parsed))){
  hc_names[i] <- check_parsed[[i]][[1]] # json objects 1 and 7 are the name and status, respectively
  hc_status[i] <- check_parsed[[i]][[7]]
}

check_df <- data.frame(hc_names,hc_status)


reactable(check_df,
          columns = list(hc_names = colDef(name='Process Name'),
                         hc_status = colDef(name='Status')),
          defaultPageSize = 20,
          filterable = TRUE,
          highlight = TRUE)

## STILL NEED TO MAKE PROCESS NAMES MORE USER READABLE 
```

:::
