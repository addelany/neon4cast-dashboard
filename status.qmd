---
title: "Status"
editor: visual
---

```{r setup, echo = FALSE, message=FALSE, warning=FALSE}
# These may need to change later 
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)
library(vis4cast)
library(glue)
library(reactable)
score4cast::ignore_sigpipe()

```

## Data Status

::: panel-tabset

## Met Data
This shows the date of the most recent NOAA forecast run for each site
```{r}
print('met data')
```

## Phenology Data

```{r}
```

## Aquatics Data

```{r}
# NOAA DATA TEST 
#df_noaa <- neon4cast::noaa_stage2()

#df_noaa2 <- df_noaa %>% 
#  group_by(site_id) %>% 
#  summarize(max = max(lubridate::as_date(start_date))) %>% 
#  collect()

#reactable(df_noaa2)


### AQUATICS DATA TEST 
## TABLE TO SUMMARIZE DATA BY SITE AND VARIABLE (SEARCHABLE)
df_aquatics <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/aquatics/aquatics-targets.csv.gz")

#forecast_sites <- c('BARC','CRAM','LIRO','PRLA','PRPO','SUGG')

df_summary <- df_aquatics %>%
  #filter(site_id %in% forecast_sites) %>%
  drop_na(observation) %>%
  group_by(site_id,variable) %>%
  #group_by(site_id) %>%
  summarize(max_date = max(lubridate::as_date(datetime)))


reactable(df_summary, 
          columns = list(max_date = colDef(name='max date')),
          defaultPageSize = 20, 
          filterable = TRUE, 
          highlight = TRUE)


```

## Terrestrial Data

```{r}
```

## Ticks Data

```{r}
```

## Beetles Data

```{r}
```


## Automated Jobs

```{r}
health_check <- GET(
  "https://healthchecks.io/api/v1/checks/",
  accept_json(),
  add_headers('X-Api-Key' = 'YKpvNOQWGtcGtyKu4rgC0Z7_0AQFo4kj')
)

check_parsed <- content(health_check,as='parsed')$checks

hc_names <- c()
hc_status <- c()

for (i in seq.int(1,length(check_parsed))){
  hc_names[i] <- check_parsed[[i]][[1]] # json objects 1 and 7 are the name and status, respectively
  hc_status[i] <- check_parsed[[i]][[7]]
}

check_df <- data.frame(hc_names,hc_status)


reactable(check_df,
          columns = list(hc_names = colDef(name='Process Name'),
                         hc_status = colDef(name='Status')),
          defaultPageSize = 20,
          filterable = TRUE,
          highlight = TRUE)

## STILL NEED TO MAKE PROCESS NAMES MORE USER READABLE 
```

:::
