---
title: "Status"
editor: visual
---

```{r setup, echo = FALSE, message=FALSE, warning=FALSE}
# These may need to change later 
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)
library(vis4cast)
library(glue)
library(reactable)
library(httr)
score4cast::ignore_sigpipe()

## source function script 
source("R/status_functions.R")

```

## Data Status

```{r}
## table that covers general forecasting challenge diagnostics

# themes_list <- c('aquatics','beetles','phenology','terrestrial_30min','terrestrial_daily','ticks')
# 
# theme_stats <- theme_statistics(themes_list)
# 
# reactable(theme_stats,
#           defaultColDef = colDef(
#             align = "center"),
#           columns = list(theme = colDef(name='Theme'),
#                          n_teams = colDef(name='Number of Teams'),
#                          n_submissions = colDef(name='Forecasts'),
#                          n_obs_forecasts_pairs = colDef(name='Forecast/Observation Pairs')),
#           highlight = TRUE,
#           bordered = TRUE)
# 
# #summed table of summaries
# df_totals <- data.frame(theme_total = nrow(theme_stats),
#                         team_total = sum(theme_stats$n_teams),
#                         submission_total = sum(theme_stats$n_submissions),
#                         forecast_obs_total = sum(theme_stats$n_obs_forecasts_pairs))
# 
# reactable(df_totals,
#           defaultColDef = colDef(
#             align = "center"),
#           columns = list(theme_total = colDef(name='Total Themes'),
#                          team_total = colDef(name='Total Teams'),
#                          submission_total = colDef(name='Total Submissions'),
#                          forecast_obs_total = colDef(name='Total Forecast/Obs Pairs')),
#           bordered = TRUE)

# ADD ROW THAT SUMS OF ALL COLUMNS (TOTAL TEAMS, TOTAL FORECASTS, ETC.)
```


::: panel-tabset

## Met Data
Below are the statuses of each NOAA related process:
```{r}

health_check_table('NOAA')

```

## Phenology Data

```{r}
## Create forecast submission stats 
pheno_forecasts_week <- forecast_time_summary(cutoff_week,'phenology')
pheno_forecasts_month <- forecast_time_summary(cutoff_month,'phenology')
pheno_forecasts_year <- forecast_time_summary(cutoff_year,'phenology')
```

- Forecasts submitted over the last week: `r pheno_forecasts_week`
- Forecasts submitted over the last month: `r pheno_forecasts_month`
- Forecasts submitted over the last year: `r pheno_forecasts_year`

```{r}
## Create Targets Table 
df_pheno <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/phenology/phenology-targets.csv.gz", guess_max = 1e6) |> 
  na.omit()
theme_targets_table(df_pheno)
```


```{r}
## Create Forecast Table 
theme_forecast_table('phenonlogy')
```

## Aquatics Data

```{r}
## Create forecast submission stats 
aquatic_forecasts_week <- forecast_time_summary(cutoff_week,'aquatics')
aquatic_forecasts_month <- forecast_time_summary(cutoff_month,'aquatics')
aquatic_forecasts_year <- forecast_time_summary(cutoff_year,'aquatics')
```

- Forecasts submitted over the last week: `r aquatic_forecasts_week`
- Forecasts submitted over the last month: `r aquatic_forecasts_month`
- Forecasts submitted over the last year: `r aquatic_forecasts_year`

```{r}
## Create Targets Table 
df_aquatics <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/aquatics/aquatics-targets.csv.gz")
theme_targets_table(df_aquatics)
```


```{r}
## Create Forecast Table 
theme_forecast_table('aquatics')
```

## Terrestrial Data

```{r}
## Post forecast submission stats --check back on this about daily or 30 min 
terr_30_forecasts_week <- forecast_time_summary(cutoff_week,'Terrestrial_30min')
terr_30_forecasts_month <- forecast_time_summary(cutoff_month,'Terrestrial_30min')
terr_30_forecasts_year <- forecast_time_summary(cutoff_year,'Terrestrial_30min')

terr_daily_forecasts_week <- forecast_time_summary(cutoff_week,'Terrestrial_daily')
terr_daily_forecasts_month <- forecast_time_summary(cutoff_month,'Terrestrial_daily')
terr_daily_forecasts_year <- forecast_time_summary(cutoff_year,'Terrestrial_daily')

```

- Thirty minute forecasts submitted over the last week: `r terr_30_forecasts_week`
- Thirty minute forecasts submitted over the last month: `r terr_30_forecasts_month`
- Thirty minute forecasts submitted over the last year: `r terr_30_forecasts_year`

- Daily forecasts submitted over the last week: `r terr_daily_forecasts_week`
- Daily forecasts submitted over the last month: `r terr_daily_forecasts_month`
- Daily forecasts submitted over the last year: `r terr_daily_forecasts_year`

```{r}
## Create 30 min Targets Table 
df_terr_30 <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/terrestrial_30min/terrestrial_30min-targets.csv.gz", guess_max = 1e6)
theme_targets_table(df_terr_30)
```


```{r}
## Create 30 min Forecast Table 
theme_forecast_table('terrestrial_30min')
```


```{r}
## Create Daily Targets Table 
df_terr_daily <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/terrestrial_daily/terrestrial_daily-targets.csv.gz", guess_max = 1e6) |> 
  na.omit()

theme_targets_table(df_terr_daily)
```


```{r}
## Create Daily Forecast Table 
theme_forecast_table('terrestrial_daily')
```
## Ticks Data

```{r}
## Post forecast submission stats 

ticks_forecasts_week <- forecast_time_summary(cutoff_week,'ticks')
ticks_forecasts_month <- forecast_time_summary(cutoff_month,'ticks')
ticks_forecasts_year <- forecast_time_summary(cutoff_year,'ticks')
```

- Forecasts submitted over the last week: `r ticks_forecasts_week`
- Forecasts submitted over the last month: `r ticks_forecasts_month`
- Forecasts submitted over the last year: `r ticks_forecasts_year`

```{r}
## Create Targets Table 
df_ticks <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/ticks/ticks-targets.csv.gz", guess_max = 1e6)
theme_targets_table(df_ticks)
```


```{r}
## Create Forecast Table 
theme_forecast_table('ticks')
```

## Beetles Data

```{r}
## Post forecast submission stats 

beetles_forecasts_week <- forecast_time_summary(cutoff_week,'beetles')
beetles_forecasts_month <- forecast_time_summary(cutoff_month,'beetles')
beetles_forecasts_year <- forecast_time_summary(cutoff_year,'beetles')
```

- Forecasts submitted over the last week: `r beetles_forecasts_week`
- Forecasts submitted over the last month: `r beetles_forecasts_month`
- Forecasts submitted over the last year: `r beetles_forecasts_year`

```{r}
## Create Targets Table 
df_beetles <- readr::read_csv("https://data.ecoforecast.org/neon4cast-targets/beetles/beetles-targets.csv.gz", guess_max = 1e6)
theme_targets_table(df_beetles)
```


```{r}
## Create Forecast Table 
theme_forecast_table('beetles')
```

## Automated Jobs

```{r}
health_check_table('ALL')
```

:::
